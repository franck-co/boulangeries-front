{"version":3,"sources":["modules/app/app.store.tsx","modules/generator/generator.store.tsx","utils/easy-peasy-decorators/metadata-storage.ts","utils/easy-peasy-decorators/decorators.ts","utils/easy-peasy-decorators/base-class.ts","store/base.ts","utils/easy-peasy-decorators/create-store.ts","modules/list/list.store.tsx","store/store.ts","store/hooks.ts","modules/generator/generator.component.tsx","utils/importIcons.js","modules/list/list.component.tsx","modules/app/app.component.tsx","other/reportWebVitals.js","index.tsx"],"names":["app","snackbar","open","severity","message","close","action","state","show","Object","assign","instance","axios","create","baseURL","timeout","headers","Authorization","generator","form","coupons","name","reset","initialState","handleChange","event","target","id","value","handleSubmit","thunk","actions","_","a","getState","getStoreActions","gta","password","nb","parseInt","isNaN","post","responseType","res","url","window","URL","createObjectURL","Blob","data","link","document","createElement","href","setAttribute","body","appendChild","click","console","log","MetadataStorage","model","models","properties","computed","listeners","thunks","instances","definition","this","push","ctor","prototype","modelName","withModelName","forEach","filter","p","find","i","initialValue","fieldName","payload","handler","call","c","l","actionOn","actionFn","t","getStoreState","metaDataStoragePool","pool","key","tsFixKey","getMetadataStorage","metadataStorageExec","proto","mapperFn","metadataStorage","protoExt","symbol","constructor","__symbol","Symbol","createMetadataStorage","Property","addPropertyMetadata","Action","addActionMetadata","Thunk","get","addThunkMetadata","EzModelBase","buildModel","hooks","EzModel","mapFn","setStateFn","s","ListModel","addModelMetadata","Model","catch","error","setData","storeModel","list","obj","store","EasyPeasy","cloneDeep","typedHooks","getActions","easyPeasy","useStoreActions","useStoreActionsLoose","useStoreState","useStoreStateLoose","useStoreDispatch","createTypedHooks","useEzActions","useEzState","createLocalHooks","holderMapFn","useLocalActions","localMapFn","S","useLocalActionsLoose","useLocalState","useLocalStateLoose","useEzState$","path","dottie","createLocalHooks$","useEzActions$","holderPath","useLocalActions$","localPath","join","useLocalState$","createLocalHooksFactory$","Form","formState","Fragment","Grid","item","xs","TextField","onChange","label","fullWidth","variant","type","Box","textAlign","Button","onClick","color","Generator","container","spacing","justify","alignItems","direction","style","height","tableIcons","Add","forwardRef","props","ref","AddBox","Check","Clear","Delete","DeleteOutline","DetailPanel","ChevronRight","Edit","Export","SaveAlt","Filter","FilterList","FirstPage","LastPage","NextPage","PreviousPage","ChevronLeft","ResetSearch","Search","SortArrow","ArrowUpward","ThirdStateCheck","Remove","ViewColumn","Refresh","Visibility","List","listState","listActions","A","useEffect","isLoaded","handleRefresh","icons","columns","field","title","render","row","DateTime","fromISO","createdAt","toLocaleString","DATE_MED_WITH_WEEKDAY","isConsumed","isActive","icon","tooltip","isFreeAction","options","grouping","filtering","pageSize","pageSizeOptions","lh","Âµ","lh$","App","useState","currentTabIndex","setTabIndex","NavBar","Switcher","index","AppSnackbar","AppBar","position","Tabs","e","newTabIndex","Tab","Alert","elevation","TabPanel","snackbarState","severity$","closeSnackbar","Snackbar","autoHideDuration","onClose","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Settings","defaultLocale","theme","createMuiTheme","ReactDOM","ThemeProvider","CssBaseline","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.5ffc20a0.chunk.js","sourcesContent":["import { action, Action } from \"easy-peasy\"\r\n\r\nexport interface app_ {\r\n  //currentView: string\r\n  snackbar: snackbar_;\r\n}\r\n\r\ntype snackbarSeverity_ = \"error\" | \"warning\" | \"info\" | \"success\"\r\n\r\ninterface snackbarOptions_{\r\n  severity?: snackbarSeverity_ ;\r\n  message: string;\r\n}\r\n\r\ninterface snackbar_ {\r\n  message: string;\r\n  severity: snackbarSeverity_;\r\n  open:boolean;\r\n\r\n close:Action<snackbar_>;\r\n show:Action<snackbar_,snackbarOptions_>;\r\n}\r\n\r\nexport const app: app_ = {\r\n  snackbar: {\r\n    open:false,\r\n    severity: \"info\",\r\n    message: \"\",\r\n    close:action((state)=>{\r\n      state.open = false\r\n    }),\r\n    show:action((state, {message, severity = \"info\"}:showParams)=>{\r\n      Object.assign(state,{message, severity,open:true})\r\n    })\r\n  }\r\n}\r\n\r\ninterface showParams {\r\n  message:string\r\n  severity?:snackbarSeverity_\r\n}\r\n\r\n","import { Action, action, thunk, Thunk } from \"easy-peasy\";\r\n\r\nimport axios from 'axios';\r\nimport { getStoreActions_ } from \"store\";\r\nimport { initialState} from \"store/store\"\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.NODE_ENV === 'development' ? 'http://localhost:4040/api' : 'https://pedagome-bakery-backend.herokuapp.com/api',\r\n    timeout: 30 * 1000,\r\n    headers: { Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5OTk5OTk5OTk5IiwibmFtZSI6IlZpYnJleiBSdWdieSBhZG1pbiIsImlhdCI6MTUxNjIzOTAyMn0.izolUSQodBdkuM25MHAhtV3uAMacLAPsxT9mh3pB7Hc` }\r\n});\r\n\r\n\r\ninterface base_{\r\n    reset:Action<form_>;\r\n}\r\ninterface form_ extends base_{\r\n    coupons: string;\r\n    name: string;\r\n    // startFromPage: string;\r\n    password?: string;\r\n\r\n    handleChange: Action<form_, any>;\r\n    handleSubmit: Thunk<form_>;\r\n}\r\n\r\nexport interface generator_ {\r\n    form: form_\r\n}\r\n\r\nexport const generator: generator_ = {\r\n    form: {\r\n        coupons: '20',\r\n        name: '',\r\n        // startFromPage: '420',\r\n\r\n        reset: action((state) => {\r\n          //console.log(initialState)\r\n          Object.assign(state,initialState.generator.form)\r\n        }),\r\n\r\n        handleChange: action((state, event) => {\r\n            state[event.target.id] = event.target.value\r\n        }),\r\n\r\n        handleSubmit: thunk(async (actions, _, { getState,getStoreActions }) => {\r\n            const gta = getStoreActions as getStoreActions_\r\n            \r\n            const state = getState()\r\n\r\n           \r\n            if (state.password != 'levure') {\r\n                gta().app.snackbar.show({message:\"Mot de passe incorrect\",severity:\"warning\"});  \r\n                return;\r\n            }\r\n\r\n\r\n            if (!state.name) {\r\n                gta().app.snackbar.show({message:\"Nom du client manquant\",severity:\"warning\"});  \r\n                return;\r\n            }\r\n\r\n            const nb: number = parseInt(state.coupons,10)\r\n            if(isNaN(nb) || nb <=0 || (nb % 5)){\r\n                gta().app.snackbar.show({message:\"Le nombre de coupons doit Ãªtre un multiple de 5\",severity:\"warning\"});\r\n                return;\r\n            }\r\n\r\n            try {\r\n\r\n                gta().app.snackbar.show({message:\"DÃ©marrage ...\",severity:\"info\"})\r\n                const res = await instance.post('/coupon/generate',{ coupons:state.coupons, name:state.name},\r\n                    {\r\n                        responseType: 'blob',\r\n                    }\r\n                )\r\n\r\n\r\n                //Create fake download link and click it\r\n                const url = window.URL.createObjectURL(new Blob([res.data]));\r\n                const link = document.createElement('a');\r\n                link.href = url;\r\n                link.setAttribute('download', 'coupons.zip');\r\n                document.body.appendChild(link);\r\n                link.click();\r\n\r\n                gta().app.snackbar.show({message:\"coupons gÃ©nÃ©rÃ©s !\",severity:\"success\"})\r\n\r\n                actions.reset()\r\n                \r\n\r\n            } catch (err) {\r\n                console.log(err)\r\n                gta().app.snackbar.show({message:\"Une erreur est survenue (voir console) !\",severity:\"error\"})\r\n                \r\n            }\r\n        })\r\n\r\n    }\r\n}\r\n    ","import { action, actionOn, computed, TargetResolver, thunk } from \"easy-peasy\";\n\ninterface IModelMetadata {\n    ctor: any;\n    modelName: string;\n}\n\ninterface IPropertyMetadata {\n    ctor: any;\n    fieldName: any;\n    initialValue?: any;\n}\n\ninterface IMethodMetadata {\n    ctor: any;\n    fieldName: any;\n    handler: any;\n}\ninterface IActionMetadata extends IMethodMetadata {}\ninterface IComputedMetadata extends IMethodMetadata {}\ninterface IThunkMetadata extends IMethodMetadata {}\ninterface IListenerMetadata extends IMethodMetadata {\n    actionFn: any;\n}\n\ninterface IModelInstance {\n    ctor: any;\n    instance: any;\n}\n\nexport class MetadataStorage {\n    private model: Record<string, Record<string, any>> = {};\n    private models: IModelMetadata[] = [];\n    private properties: IPropertyMetadata[] = [];\n    private actions: IActionMetadata[] = [];\n    private computed: IComputedMetadata[] = [];\n    private listeners: IListenerMetadata[] = [];\n    private thunks: IThunkMetadata[] = [];\n    private instances: IModelInstance[] = [];\n\n    public addModelMetadata(definition: IModelMetadata) {\n        this.models.push({ ctor: definition.ctor.prototype, modelName: definition.modelName });\n        this.instances.push({ ctor: definition.ctor.prototype, instance: new definition.ctor() });\n    }\n\n    public addPropertyMetadata(definition: IPropertyMetadata) {\n        this.properties.push(definition);\n    }\n\n    public addActionMetadata(definition: IActionMetadata) {\n        this.actions.push(definition);\n    }\n\n    public addComputedMetadata(definition: IComputedMetadata) {\n        this.computed.push(definition);\n    }\n\n    public addListenerMetadata(definition: IListenerMetadata) {\n        this.listeners.push(definition);\n    }\n\n    public addThunkMetadata(definition: IThunkMetadata) {\n        this.thunks.push(definition);\n    }\n\n    public buildModel(withModelName=false) {\n        this.models.forEach(({ ctor, modelName }) => {\n            \n        \n            this.model[modelName] = {};\n\n            this.properties\n                .filter(p => p.ctor === ctor)\n                .forEach(p => {\n                    const instance = this.instances.find(i => i.ctor === p.ctor);\n                    const  initialValue = instance?.instance[p.fieldName];\n\n                    this.model[modelName][p.fieldName] = initialValue;\n                });\n\n            this.actions\n                .filter(a => a.ctor === ctor)\n                .forEach(a => {\n                    this.model[modelName][a.fieldName] = action((state, payload) => {\n                        a.handler.call(state, payload);\n                    });\n                });\n\n            this.computed\n                .filter(c => c.ctor === ctor)\n                .forEach(c => {\n                    this.model[modelName][c.fieldName] = computed(state => {\n                        return c.handler.call(state);\n                    });\n                });\n\n            this.listeners\n                .filter(l => l.ctor === ctor)\n                .forEach(l => {\n                    this.model[modelName][l.fieldName] = actionOn(l.actionFn, (state, target) => {\n                        l.handler.call(state, target);\n                    });\n                });\n\n            this.thunks\n                .filter(t => t.ctor === ctor)\n                .forEach(t => {\n                    this.model[modelName][t.fieldName] = thunk((actions, payload, { getState,getStoreActions,getStoreState }) => {\n                        return t.handler.call({ ...getState(), ...actions,getStoreActions,getStoreState }, payload);\n                    });\n                });\n\n            if(!withModelName){\n                this.model = this.model[modelName]\n            }\n        });\n\n        return this.model as any;\n    }\n}\n\n\nclass  MetadataStoragePool {\n\n    pool: Array<MetadataStorage> = []\n\n    getMetadataStorage(key:string | Symbol):MetadataStorage{\n\n        //Because typescript type system doesn't support Symbol as index type for arrays\n        const tsFixKey = key as unknown as string\n\n        return this.pool[tsFixKey] \n    }\n\n    \n    createMetadataStorage(key:string | Symbol):MetadataStorage{\n\n        //Because typescript type system doesn't support Symbol as index type for arrays\n        const tsFixKey = key as unknown as string\n\n        this.pool[tsFixKey] = new MetadataStorage();\n        return this.getMetadataStorage(key)\n    }\n}\n\nexport const metaDataStoragePool = new MetadataStoragePool();\n","import { MetadataStorage, metaDataStoragePool } from \"./metadata-storage\";\nimport { TargetResolver } from \"easy-peasy\";\nimport { ToStoreType } from \"./types\";\n//import any = jasmine.any;\n\n\nfunction metadataStorageExec(proto,mapperFn:(metadataStorage:MetadataStorage)=>void){\n    const protoExt = proto as typeof proto & any\n        let symbol = protoExt.constructor.__symbol\n        let metadataStorage\n\n        //Ajout si besoin d'un symbol Ã  l'object constructor\n        //Les Decorateurs sont executÃ©s d'abord pour les properties puis pour la classe\n        if(!symbol){\n            symbol = Symbol(proto.constructor.name)\n            metadataStorage = metaDataStoragePool.createMetadataStorage(symbol)\n            protoExt.constructor.__symbol = symbol\n        }else{\n            console.log(\"symbo \",symbol,\"trouvÃ© !\")\n            metadataStorage = metaDataStoragePool.getMetadataStorage(symbol)\n        }\n\n        mapperFn(metadataStorage)\n}\n\n\nexport function Model(modelName: string = 'model') {\n\n    console.log('Class Decorator factory')\n\n    return <T extends { new (...args: any[]): {} }>(ctor: T) => {\n        \n        const ctorExt = ctor as typeof ctor & any\n        const symbol = ctorExt.__symbol\n       \n        const metadataStorage = metaDataStoragePool.getMetadataStorage(symbol)\n        metadataStorage.addModelMetadata({ ctor: ctor, modelName });\n\n        // Object.defineProperty(ctorExt,\"obj\",{\n        //     get:function(){\n        //         const metaDataStorage = metaDataStoragePool.getMetadataStorage(this.__symbol) \n        //         return metaDataStorage.buildModel();\n        //     }\n        // })\n    };\n}\n\nexport function Property() {\n    return ((...[proto, fieldName]: Parameters<PropertyDecorator>) => {\n        // console.log(\"PropertyDecorator proto : \",proto)\n        metadataStorageExec(proto,metadataStorage=>metadataStorage.addPropertyMetadata({ ctor: proto, fieldName }))\n    }) as PropertyDecorator ;\n}\n\nexport function Child() {\n\n    return ((...[proto, fieldName]: Parameters<PropertyDecorator>) => {\n        // console.log(\"PropertyDecorator proto : \",proto)\n        metadataStorageExec(proto,metadataStorage=>metadataStorage.addPropertyMetadata({ ctor: proto, fieldName }))\n    }) as PropertyDecorator ;\n}\n\nexport function Action<T>() {\n    return ((...[ctor, fieldName, { value }]: Parameters<MethodDecorator>) => {\n        // console.log(\"MethodDecorator proto : \",ctor)\n        metadataStorageExec(ctor,metadataStorage=>metadataStorage.addActionMetadata({ ctor: ctor, fieldName, handler: value }))\n    }) as MethodDecorator\n}\n\nexport function Computed() {\n    return ((...[ctor, fieldName, { value, get }]: Parameters<MethodDecorator>) => {\n        metadataStorageExec(ctor,metadataStorage=>metadataStorage.addComputedMetadata({ ctor: ctor, fieldName, handler: value || get }))\n    }) as MethodDecorator\n}\n\nexport function Thunk() {\n    return ((...[ctor, fieldName, { value, get }]: Parameters<MethodDecorator>) => {\n        // console.log(\"MethodDecorator proto : \",ctor)\n        metadataStorageExec(ctor,metadataStorage=>metadataStorage.addThunkMetadata({ ctor: ctor, fieldName, handler: value }))\n    }) as MethodDecorator\n}\n\nexport function Listener<Model extends object, StoreModel extends object = {}>(\n    actionFn: TargetResolver<ToStoreType<Model>, ToStoreType<StoreModel>>,\n) {\n    return ((...[ctor, fieldName, { value, get }]: Parameters<MethodDecorator>) => {\n        metadataStorageExec(ctor,metadataStorage=>metadataStorage.addListenerMetadata({ handler: value, fieldName, ctor: ctor, actionFn }))\n    }) as MethodDecorator\n}\n\n","import { metaDataStoragePool } from \"./metadata-storage\";\r\n\r\n\r\nexport abstract class EzModelBase {\r\n\r\n    static __symbol?\r\n\r\n    static get obj(){\r\n        const metaDataStorage = metaDataStoragePool.getMetadataStorage(this.__symbol) \r\n        return metaDataStorage.buildModel();\r\n    }\r\n\r\n    static get objWithName(){\r\n        const metaDataStorage = metaDataStoragePool.getMetadataStorage(this.__symbol) \r\n        return metaDataStorage.buildModel(true);\r\n    }\r\n\r\n}","import { Action, Thunk } from \"utils/easy-peasy-decorators\";\r\nimport { EzModelBase } from \"utils/easy-peasy-decorators/base-class\";\r\nimport { getStoreActions_, getStoreState_ } from \"./hooks\";\r\nimport {initialState} from './store'\r\n\r\n//do not reference in store/index !\r\nexport abstract class EzModel extends EzModelBase {\r\n\r\n    protected getStoreActions:getStoreActions_ = (()=>{}) as getStoreActions_ \r\n    protected getStoreState:getStoreState_ = (()=>{}) as getStoreState_\r\n\r\n    @Action()\r\n    setStateFn(mapFn){\r\n        mapFn(this);\r\n    }\r\n\r\n    @Thunk()\r\n    resetInitial(mapFn){\r\n       this.setStateFn(s=>{\r\n           Object.assign(s,mapFn(initialState))\r\n       })\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n","import * as easyPeasy from \"easy-peasy\";\nimport { ToStoreType } from './types';\n//import { metadataStorage } from \"./metadata-storage\";\n\nexport function createStore<T extends object = {} , C extends object = {}>(storeModel?:C) {\n\n    const store = easyPeasy.createStore<any>(storeModel);\n    return store as easyPeasy.Store<ToStoreType<T>>;\n    \n}\n\ntype freeObj =  {[key:string]:any}\n\ninterface createTypedHooksReturn<Model extends object> {\n    useStoreActions: <Result>(\n        mapActions: (actions: easyPeasy.Actions<ToStoreType<Model>>) => Result,\n    ) => Result;\n    useStoreActionsLoose: <Result>(\n        mapActions: (actions: easyPeasy.Actions<ToStoreType<Model>> & freeObj) => Result,\n    ) => Result;\n    useStoreState: <Result>(\n        mapState: (state: ToStoreType<Model>) => Result,\n        dependencies?: any[],\n    ) => Result;\n    useStoreStateLoose: <Result>(\n        mapState: (state: ToStoreType<Model> & freeObj) => Result,\n        dependencies?: any[],\n    ) => Result;\n    useStoreDispatch: () => easyPeasy.Dispatch<ToStoreType<Model>>;\n\n}\n\nexport function createTypedHooks<Model extends object>(): createTypedHooksReturn<Model> {\n    \n    const hooks = easyPeasy.createTypedHooks<any>();\n\n    return {\n        useStoreActions: hooks.useStoreActions,\n        useStoreActionsLoose: hooks.useStoreActions,\n        useStoreState: hooks.useStoreState,\n        useStoreStateLoose: hooks.useStoreState,\n        useStoreDispatch:hooks.useStoreDispatch\n    } as any;\n}\n\n\n\n// interface createLocalTypedHooksReturn<LocalModel extends object> {\n//     useStoreActions: <Result>(\n//         mapActions: (actions: easyPeasy.Actions<ToStoreType<LocalModel>>) => Result,\n//     ) => Result;\n//     useStoreActionsLoose: <Result>(\n//         mapActions: (actions: easyPeasy.Actions<ToStoreType<LocalModel>> & freeObj) => Result,\n//     ) => Result;\n//     useStoreState: <Result>(\n//         mapState: (state: ToStoreType<LocalModel>) => Result,\n//         dependencies?: any[],\n//     ) => Result;\n//     useStoreStateLoose: <Result>(\n//         mapState: (state: ToStoreType<LocalModel> & freeObj) => Result,\n//         dependencies?: any[],\n//     ) => Result;\n//     useStoreDispatch: () => easyPeasy.Dispatch<ToStoreType<LocalModel>>;\n\n// }\n\n\n// type HolderMapFn<StoreModel extends object> = (store: ToStoreType<StoreModel>) => object\n\n// export function createLocalHooks<StoreModel extends object, LocalModel  extends object>(holderMapFn : HolderMapFn<StoreModel>): createLocalTypedHooksReturn<LocalModel> {\n    \n//     const hooks = easyPeasy.createTypedHooks<any>();\n\n//     return {\n//         useStoreActions: (localMapFn)=> hooks.useStoreActions(store  =>localMapFn(holderMapFn(store as ToStoreType<StoreModel>))),\n//         useStoreActionsLoose: hooks.useStoreActions,\n//         useStoreState: hooks.useStoreState,\n//         useStoreStateLoose: hooks.useStoreState,\n//         useStoreDispatch:hooks.useStoreDispatch\n//     } as any;\n// }\n\n\n\n\ninterface createLocalTypedHooksReturn<LocalModel extends object> {\n    useLocalActions: <Result>(\n        mapActions: (actions: easyPeasy.Actions<ToStoreType<LocalModel>>) => Result,\n    ) => Result;\n    useLocalActionsLoose: <Result>(\n        mapActions: (actions: easyPeasy.Actions<ToStoreType<LocalModel>> & freeObj) => Result,\n    ) => Result;\n    useLocalState: <Result>(\n        mapState?: (state: ToStoreType<LocalModel>) => Result,\n        dependencies?: any[],\n    ) => Result;\n    useLocalStateLoose: <Result>(\n        mapState: (state: ToStoreType<LocalModel> & freeObj) => Result,\n        dependencies?: any[],\n    ) => Result;\n\n}\n\n\ntype HolderMapFn<StoreModel extends object> = (store: ToStoreType<StoreModel>) => object;\n\n\n\nexport function createLocalHooksFactory<StoreModel extends object>(hooks){\n\nreturn function createLocalHooks<LocalModel  extends object>(holderMapFn : HolderMapFn<StoreModel>): createLocalTypedHooksReturn<LocalModel> {\n    \n    //const hooks = easyPeasy.createTypedHooks<any>();\n\n    return {\n        useLocalActions: (localMapFn = (S=>S))=> hooks.useStoreActions(store  =>localMapFn(holderMapFn(store as ToStoreType<StoreModel>))),\n        useLocalActionsLoose: (localMapFn = S=>S)=> hooks.useStoreActions(store  =>localMapFn(holderMapFn(store as ToStoreType<StoreModel>))),\n        useLocalState: (localMapFn = S=>S)=> hooks.useStoreState(store  =>localMapFn(holderMapFn(store as ToStoreType<StoreModel>))),\n        useLocalStateLoose: (localMapFn = S=>S)=> hooks.useStoreState(store  =>localMapFn(holderMapFn(store as ToStoreType<StoreModel>))),\n    } as any;\n}\n}\n\n//Peut Ãªtre faire createLocalHooks et createLocalHooksLoose pour que la holderMapFn soit puisse Ãªtre loose\n\n","//import { Action, action, thunk, Thunk } from \"easy-peasy\";\r\n//import { getStoreActions, getStoreState} from 'store/hooks';\r\nimport { EzModel } from 'store/base'\r\nimport axios from 'axios';\r\nconst instance = axios.create({\r\n    baseURL: process.env.NODE_ENV === 'development' ? 'http://localhost:4040/api' : 'https://pedagome-bakery-backend.herokuapp.com/api',\r\n    timeout: 5000,\r\n    headers: { Authorization: `Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI5OTk5OTk5OTk5IiwibmFtZSI6IlZpYnJleiBSdWdieSBhZG1pbiIsImlhdCI6MTUxNjIzOTAyMn0.izolUSQodBdkuM25MHAhtV3uAMacLAPsxT9mh3pB7Hc` }\r\n});\r\n\r\nimport { Model, Property, Thunk, Action } from \"utils/easy-peasy-decorators\";\r\n\r\n\r\n@Model(\"list\")\r\nclass ListModel extends EzModel {\r\n\r\n    @Property()\r\n    data/*:Array<any>*/ = [];\r\n\r\n    @Property()\r\n    isLoaded:boolean = false\r\n\r\n    @Action()\r\n    setData(payload/*:Array<any>*/) {\r\n        this.data = payload\r\n    }\r\n\r\n    @Thunk()\r\n    async handleRefresh() {\r\n\r\n        const res = await instance.get('coupon').catch(console.error)\r\n        if (res && res.data) this.setData(res.data)\r\n\r\n        //this.getStoreActions().app.snackbar.show({ message: this.getStoreState().generator.form.name,severity:\"warning\" })\r\n    }\r\n}\r\n\r\nexport { ListModel }","\r\n\r\n\r\n\r\n\r\n\r\n//import { createStore, createTypedHooks } from 'easy-peasy';\r\n\r\nimport * as EasyPeasy from 'easy-peasy';\r\nimport { app, app_ } from 'modules/app/app.store';\r\nimport { generator, generator_ } from 'modules/generator/generator.store';\r\nimport { ListModel } from \"modules/list/list.store\";\r\n\r\nimport {cloneDeep} from 'lodash' \r\n\r\nexport interface StoreModel {\r\n        list:ListModel;\r\n        app: app_;\r\n        generator:generator_;\r\n}\r\n\r\nexport const storeModel = {\r\n    app,\r\n    generator,\r\n    list:ListModel.obj\r\n}\r\n\r\n\r\nexport const store = EasyPeasy.createStore<StoreModel>(storeModel);\r\nexport const initialState = cloneDeep(store.getState());\r\n","import { Actions, State } from 'easy-peasy';\r\n\r\nimport { store, StoreModel } from './store'\r\nimport { createTypedHooks } from \"utils/easy-peasy-decorators\";\r\n\r\nimport dottie from 'dottie'\r\n\r\nimport { ToStoreType } from 'utils/easy-peasy-decorators/types';\r\nimport { createLocalHooksFactory } from 'utils/easy-peasy-decorators/create-store';\r\n\r\n\r\nexport type getStoreState_ = () => State<StoreModel> & { [key: string]: any }\r\nexport type getStoreActions_ = () => Actions<StoreModel> & { [key: string]: any }\r\n\r\ntype StoreState = State<StoreModel>\r\ntype StoreActions = Actions<StoreModel>\r\n\r\ntype freeObj = { [key: string]: any }\r\n\r\n\r\n//don't use in store models, use this.getStoreState instead to avoid circular-dependency\r\nexport const getStoreState = store.getState as getStoreState_\r\nexport const getStoreActions = store.getActions as getStoreActions_\r\n\r\n\r\nconst typedHooks = createTypedHooks<StoreModel>();\r\n\r\nexport const useEzActions = typedHooks.useStoreActionsLoose;\r\nexport const useEzDispatch = typedHooks.useStoreDispatch;\r\nexport const useEzState = typedHooks.useStoreStateLoose;\r\n\r\nexport const createLocalHooks = createLocalHooksFactory<StoreModel>(typedHooks)\r\n\r\n\r\n/**\r\n * Hooks with dot notation\r\n */\r\n\r\ntype PathImpl<T, Key extends keyof T> =\r\n  Key extends string\r\n  ? T[Key] extends Record<string, any>\r\n  ? | `${Key}.${PathImpl<T[Key], Exclude<keyof T[Key], keyof any[]>> & string}`\r\n  | `${Key}.${Exclude<keyof T[Key], keyof any[]> & string}`\r\n  : never\r\n  : never;\r\n\r\ntype PathImpl2<T> = PathImpl<T, keyof T> | keyof T;\r\n\r\ntype Path<T> = PathImpl2<T> extends string | keyof T ? PathImpl2<T> : keyof T;\r\n\r\ntype PathValue<T, P extends Path<T>> =\r\n  P extends `${infer Key}.${infer Rest}`\r\n  ? Key extends keyof T\r\n  ? Rest extends Path<T[Key]>\r\n  ? PathValue<T[Key], Rest>\r\n  : never\r\n  : never\r\n  : P extends keyof T\r\n  ? T[P]\r\n  : never;\r\n\r\n\r\ntype useEzHook$_<T> = < P extends Path<T> = Path<{}>>(path: string & P) => PathValue<T, P>\r\n\r\n\r\nexport const useEzState$ = function (path) {\r\n  const selectedState = useEzState(state => dottie.get(state, path as string))\r\n  return selectedState// as PathValue<T, P>\r\n} as useEzHook$_<StoreState>\r\n\r\nexport const useEzActions$ = function (path) {\r\n  const selectedState = useEzActions(state => dottie.get(state, path as string))\r\n  return selectedState// as PathValue<T, P>\r\n} as useEzHook$_<StoreActions>\r\n\r\n\r\n\r\nexport const getStoreState$ = function (path) {\r\n  return path ? dottie.get(store.getState(), path) : store.getState()\r\n} as useEzHook$_<State<ToStoreType<StoreModel>>>;\r\n\r\n\r\n\r\nexport const getStoreActions$ = function (path) {\r\n  return path ? dottie.get(store.getActions(), path) : store.getActions()\r\n} as useEzHook$_<Actions<ToStoreType<StoreModel>>>;\r\n\r\n\r\n\r\n\r\n/**\r\n* No autocomplete\r\n*/\r\nexport const getStoreStateLoose$ = function (path: string) {\r\n  return path ? dottie.get(store.getState(), path) : store.getState()\r\n}\r\n\r\n/**\r\n* No autocomplete\r\n*/\r\nexport const getStoreActionsLoose$ = function (path) {\r\n  return path ? dottie.get(store.getActions(), path) : store.getActions()\r\n}\r\n\r\n/**\r\n* No autocomplete\r\n*/\r\nexport const useEzStateLoose$ = function (path) {\r\n  const selectedState = useEzState(state => dottie.get(state, path as string))\r\n  return selectedState// as PathValue<T, P>\r\n}\r\n\r\n/**\r\n* No autocomplete\r\n*/\r\nexport const useEzActionsLoose$ = function (path) {\r\n  const selectedState = useEzActions(state => dottie.get(state, path as string))\r\n  return selectedState// as PathValue<T, P>\r\n} \r\n\r\n// type useEzHook$_<T> = < P extends Path<T> = Path<{}>>(path:P)=>PathValue<T, P>\r\n// export function useLocalStateFactory$<LocalState>(holderPath){\r\n\r\n//   return function useLocalState$(localPath){\r\n//     //@ts-ignore\r\n//     const selectedState = useEzState$(state => dottie.get(state, [holderPath,localPath].join('.') ))\r\n//     return selectedState// as PathValue<T, P>\r\n//   } as useEzHook$_<LocalState>\r\n\r\n// }  \r\n\r\n\r\n// const useLocalState$ = useLocalStateFactory$<State<ToStoreType<ListModel>>>('')\r\n\r\n// useLocalState$(\"\")\r\n\r\n\r\n\r\n\r\n\r\n\r\ninterface createLocalTypedHooksReturn$<LocalModel extends object> {\r\n\r\n  useLocalActions$: useEzHook$_<Actions<ToStoreType<LocalModel>>>\r\n  useLocalState$: useEzHook$_<State<ToStoreType<LocalModel>>>\r\n}\r\n\r\n/**\r\n * Fonctionne mais pas au niveau 1\r\n */\r\nexport function createLocalHooksFactory$<StoreModel extends object>({ useEzState$, useEzActions$ }) {\r\n\r\n  return function <LocalModel extends object>(holderPath): createLocalTypedHooksReturn$<LocalModel> {\r\n\r\n    //const hooks = easyPeasy.createTypedHooks<any>();\r\n\r\n    return {\r\n      useLocalActions$: function (localPath) {\r\n        //@ts-ignore\r\n        const selectedState = useEzActions$([holderPath, localPath].join('.'))\r\n        return selectedState// as PathValue<T, P>\r\n      },\r\n      useLocalState$: function (localPath) {\r\n        //@ts-ignore\r\n        const selectedState = useEzState$([holderPath, localPath].join('.'))\r\n        return selectedState// as PathValue<T, P>\r\n      }\r\n    } as any;\r\n  }\r\n}\r\n\r\nexport const createLocalHooks$ = createLocalHooksFactory$<StoreModel>({ useEzState$, useEzActions$ })\r\n\r\n\r\n\r\n\r\n  // export function createLocalHooksFactory<StoreModel extends object>(hooks){\r\n\r\n  // return function createLocalHooks<LocalModel  extends object>(holderMapFn : HolderMapFn<StoreModel>): createLocalTypedHooksReturn<LocalModel> {\r\n\r\n      //const hooks = easyPeasy.cre\r\n\r\n\r\n\r\n\r\n// //    declare function get<T, P extends Path<T>>(obj:T, path: P): PathValue<T, P>;\r\n\r\n// type fGet =  <T, P extends Path<T>>(obj:T, path: P)=> PathValue<T, P>;\r\n\r\n// type fGetStoreModel =  < P extends Path<State<StoreModel>>>(path: P)=> PathValue<State<StoreModel>, P>;\r\n\r\n// // export function useEzState$<Obj, PArgs extends string[]>(...path:PArgs): PathValue<Obj, Join<PArgs>>{\r\n// //   return useEzState(state => dottie.get(state,path.join('.')))\r\n// // }\r\n\r\n// // export function useEzState$(...path:Array<any>):any{\r\n// //   return useEzState(state => dottie.get(state,path.join('.')))\r\n// // }\r\n// const dotget: fGet = function (obj, path){\r\n//   //@ts-ignore\r\n//   return dottie.get(obj ,path)\r\n// }\r\n\r\n// dotget(store.getState(),\"app.snackbar.message\")\r\n\r\n\r\n\r\n\r\n\r\n\r\n// type useEzState2_<T = undefined> = T extends undefined ? (< P extends Path<StoreState> = Path<{}>>(path:P)=>PathValue<StoreState, P>) : (<T, P extends Path<T> = Path<{}>>(path:P)=>PathValue<T, P>)\r\n\r\n// type useEzStateAll = useEzState_<StoreState>\r\n// type useEzStateApp = useEzState_<StoreState['app']>\r\n\r\n// export function useEzState$<T = StoreState, P extends Path<T> = Path<{}>>(path:P):PathValue<T, P>{\r\n//   const selectedState = useEzState(state => dottie.get(state,path as string))\r\n//   //@ts-ignore\r\n//   return selectedState// as PathValue<T, P>\r\n// }\r\n\r\n\r\n\r\n\r\n\r\n// // export function UseEzStateGen$<T = StoreState>():useEzState_<T>{\r\n// //   return useEzState$ as useEzState_<T>\r\n// // }\r\n\r\n// const u = useEzState as useEzState_<State<ToStoreType<ListModel>>> //fonctionne\r\n\r\n// // u(\"\") \r\n\r\n\r\n// const u2 =  useEzState as useEzState2_<State<ToStoreType<ListModel>>>\r\n\r\n// // u2(\"\")\r\n\r\n// // let ml:useEzState2_<StoreState['app']>\r\n// // ml(\"\")\r\n// // get(store.getState(), \"list.\");\r\n\r\n\r\n\r\n\r\n\r\n// type Join1<Args extends string[]> = `${Args[0]}.${Args[1]}`\r\n\r\n\r\n// //type Join1<Arg extends string,Args extends string[]> = `${Arg}.${Args[0]}`\r\n\r\n\r\n// type Join2<Args, Joined> = Join1<T> extends P extends `${infer Key}.${infer Rest}` ? : Join2<J\r\n\r\n\r\n\r\n\r\n\r\n\r\n// const a = join(\"bibou\",\"baba\",\"bubu\")\r\n\r\n// type dfhd =  typeof  a \r\n\r\n\r\n\r\n\r\n// type Split<S extends string, separator extends string> = S extends  `${infer Key}${separator}${infer Rest}` ? `${Key} et ${Rest}` : 'non'\r\n// type s1 = Split<\"abc.def#ghi\",\"#\"> //=abc.def et ghi\r\n\r\n\r\n// type PositiveNumbers = 1 | 2 | 3 | 4 | 5 | 6 | 7 | 8 | 9 | 10 | 11\r\n// type SplitArr<A extends any[]> = A[PositiveNumbers]\r\n\r\n// type numberRest = Exclude<number,0>\r\n\r\n\r\n\r\n// type arrTestType =  [\"a\",\"b\",\"c\",\"b\"]\r\n// type arr = SplitArr<arrTestType>\r\n\r\n\r\n\r\n// type Join<Args extends string[]> = `${Nz0<Args>}${Nz<Args, 1>}${Nz<Args, 2>}${Nz<Args, 3>}${Nz<Args, 4>}` //${Nz<Args, 5>}${Nz<Args, 6>}${Nz<Args, 7>}${Nz<Args, 8>}${Nz<Args, 9>}${Nz<Args, 10>}`\r\n\r\n// type Nz0<Args extends string[]> = Args[0] extends string ? `${Args[0]}` : ''\r\n// type Nz<Args extends string[], i extends number> = Args[i] extends string ? `.${Args[i]}` : ''\r\n\r\n\r\n\r\n// declare function join<Args extends string[]>(...args:Args):Join<Args>;\r\n// declare function joinPath<Args extends string[]>(...args:Args):Join<Args>;\r\n\r\n// join(\"bibou\",\"baba\",\"bubu\");\r\n\r\n\r\n//declare function joinGet<T, P extends Path<Join<PArgs>>  >(obj: T, ...args:PArgs): PathValue<T, Path<Join<PArgs>>>;\r\n\r\n\r\n// function joinGet(obj,...args:string[]){\r\n//   const path = join(...args) as \r\n//   return get(obj,path)\r\n// }\r\n\r\n\r\n//declare function get<T, P extends Path<T>>(obj: T, path: P): PathValue<T, P>;\r\n\r\n// type ArgsToPath<Args extends string[]> = Path<Join<Args>>\r\n\r\n// type ArgsToPath<Join<Args>> = Path<T>\r\n\r\n// joinGet()\r\n\r\n\r\n//declare function joinGet<Arg extends string, Args extends string[]>(arg:Arg,...args:Args):Join<Args>\r\n\r\n","import React from 'react';\r\nimport { useEzActions, useEzState } from 'store/hooks';\r\n\r\nimport { TextField, Grid, Button, Box } from \"@material-ui/core\";\r\n\r\n//ajouter la validation (avec joi ?)\r\n//NumÃ©ro de page auto\r\n//Un loader\r\n//Liste\r\n//Tester les classes EZPZ\r\n//Poster\r\n//Login\r\n\r\nfunction Form() {\r\n  console.log(\"useEzState : \",typeof useEzState)\r\n  const formState = useEzState(s => s.generator.form)\r\n  const handleChange = useEzActions(a => a.generator.form.handleChange)\r\n  const handleSubmit = useEzActions(a => a.generator.form.handleSubmit)\r\n  \r\n  return (\r\n    <React.Fragment>\r\n\r\n\r\n\r\n      <Grid item xs={12}>\r\n        <TextField value={formState.coupons} id=\"coupons\" onChange={handleChange} label=\"Nombre de coupons (multiple de 5): \" fullWidth variant=\"outlined\" />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <TextField value={formState.name} id='name' onChange={handleChange} label=\"Nom du client: \" fullWidth variant=\"outlined\" />\r\n      </Grid>\r\n\r\n      {/* <Grid item xs={12}>\r\n        <TextField value={formState.startFromPage} id=\"startFromPage\" onChange={handleChange} label=\"NumÃ©ro de la page: \" fullWidth variant=\"outlined\" />\r\n      </Grid> */}\r\n\r\n      <Grid item xs={12}>\r\n        <TextField value={formState.password} id='password' onChange={handleChange} label=\"Mot de passe: \" type=\"password\" fullWidth variant=\"outlined\" />\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <Box textAlign='center'>\r\n          <Button onClick={() => handleSubmit()} variant=\"contained\" color=\"primary\">GÃ©nÃ©rer</Button>\r\n        </Box>\r\n      </Grid>\r\n\r\n\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\n\r\nexport function Generator() {\r\n\r\n  return (\r\n    <Grid container spacing={3}  justify=\"center\" alignItems=\"center\" direction=\"column\" style={{height:\"100%\"}}>\r\n      <Grid container item spacing={5} xs={4}>\r\n        <h1>Generateur de coupons</h1>\r\n        <Form />\r\n      </Grid>\r\n    </Grid>\r\n\r\n  )\r\n}","import React, { forwardRef } from 'react';\r\n\r\n/* M-UI ICONS */\r\nimport {\r\n  AddBox,\r\n  ArrowUpward,\r\n  Check,\r\n  ChevronLeft,\r\n  ChevronRight,\r\n  Clear,\r\n  DeleteOutline,\r\n  Edit,\r\n  FilterList,\r\n  FirstPage,\r\n  LastPage,\r\n  Remove,\r\n  SaveAlt,\r\n  Search,\r\n  ViewColumn,\r\n  Refresh,\r\n  Visibility\r\n} from '@material-ui/icons'\r\n\r\nimport PersonAddIcon from '@material-ui/icons/PersonAdd';\r\nimport ThumbsUpDownIcon from '@material-ui/icons/ThumbsUpDown'; //(pour les candidatures ?)\r\n\r\nconst tableIcons = {\r\n  Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n  Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n  Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n  DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n  Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n  Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n  FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n  LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n  NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n  PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n  ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n  Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n  SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\r\n  ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n  ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />),\r\n  Refresh: forwardRef((props, ref) => <Refresh {...props} ref={ref} />),\r\n  Visibility: forwardRef((props, ref) => <Visibility {...props} ref={ref} />),\r\n};\r\n\r\n\r\nexport { tableIcons };","import React from 'react';\r\nimport { createLocalHooks, useEzActions, useEzState } from 'store/hooks';\r\n\r\nimport { TextField, Grid, Button, Box } from \"@material-ui/core\";\r\nimport MaterialTable from 'material-table';\r\n\r\nimport { tableIcons } from 'utils/importIcons'\r\nimport { ListModel } from './list.store';\r\nimport { useEffect } from 'react';\r\nimport { DateTime } from 'luxon';\r\n//ajouter la validation (avec joi ?)\r\n//NumÃ©ro de page auto\r\n//Un loader\r\n//Liste\r\n//Tester les classes EZPZ\r\n//Poster\r\n//Login\r\n\r\nconst { useLocalState, useLocalActions } = createLocalHooks<ListModel>(s => s.list)\r\n\r\n\r\nexport function List() {\r\n\r\n  const listState = useLocalState(S => S)\r\n  const listActions = useLocalActions(A => A)\r\n\r\n  //Alternative : \r\n  // const listState =  useEzState(s=>s.list)\r\n  // const listActions =  useEzActions(a=>a.list)\r\n\r\n  useEffect(()=>{\r\n    !listState.isLoaded && listActions.handleRefresh()\r\n  },[listState.isLoaded])\r\n\r\n  return (\r\n    <MaterialTable\r\n      icons={tableIcons}\r\n      columns={[\r\n        { field: \"couponId\", title: \"RÃ©fÃ©rence\" },\r\n        { field: \"customerName\", title: \"Client\" },\r\n        { field: \"createdAt\", title: \"CrÃ©Ã© le\", render: (row: any) => DateTime.fromISO(row.createdAt).toLocaleString(DateTime.DATE_MED_WITH_WEEKDAY) },\r\n        { field: 'isConsumed', title: \"Etat\", render: (row: any) => row.isConsumed ? \"ScannÃ©\" : row.isActive ? \"Actif\" : \"DÃ©sactivÃ©\" },\r\n        { field: \"bakeryName\", title: \"Boulangerie\" },\r\n      ]}\r\n\r\n      data={listState.data}\r\n\r\n      actions={[\r\n        {\r\n          icon: () => <tableIcons.Refresh />,\r\n          tooltip: 'Rafraichir les donnÃ©es',\r\n          isFreeAction: true,\r\n          onClick: () => listActions.handleRefresh()\r\n        }\r\n      ]}\r\n      options={{\r\n        grouping: false,\r\n        filtering: true,\r\n        pageSize: 50,\r\n        pageSizeOptions: [10, 20, 50, 100, 300],\r\n      }}\r\n    />\r\n\r\n  )\r\n}","import React from 'react';\r\n\r\n\r\nimport { Generator } from \"modules/generator/generator.component\";\r\nimport {List } from \"modules/list/list.component\";\r\nimport { AppBar, Box, Grid, Snackbar, Tab, Tabs } from '@material-ui/core';\r\nimport MuiAlert from '@material-ui/lab/Alert';\r\nimport { useState } from 'react';\r\n\r\n//import { useStoreActions,useStoreState } from 'easy-peasy';\r\nimport { createLocalHooks, createLocalHooks$,useEzActions,useEzState, useEzState$} from 'store/hooks';\r\n\r\nimport {app_} from './app.store'\r\nconst lh = createLocalHooks<app_>(Âµ=>Âµ.app)\r\nconst lh$ = createLocalHooks$<app_>(\"app\")\r\n\r\n\r\nexport const App = () => {\r\n    const [currentTabIndex, setTabIndex] = useState(0)\r\n\r\n    return (\r\n        <Box height=\"100%\"  >\r\n            <NavBar currentTabIndex={currentTabIndex} setTabIndex={setTabIndex} />\r\n            <Switcher index={currentTabIndex} />\r\n            <AppSnackbar/>\r\n        </Box>\r\n    )\r\n}\r\n\r\n\r\n\r\n//height=\"calc(100vh - 1000px);\"\r\n\r\nfunction NavBar({ currentTabIndex, setTabIndex }) {\r\n\r\n    //const currentView = useEzState(s => s.app.currentView)\r\n\r\n    return (\r\n\r\n\r\n        <AppBar position=\"static\">\r\n            <Tabs value={currentTabIndex} onChange={(e, newTabIndex) => setTabIndex(newTabIndex)}>\r\n                <Tab label=\"GÃ©nÃ©rateur\" />\r\n                <Tab label=\"Liste\" />\r\n            </Tabs>\r\n        </AppBar>\r\n\r\n\r\n    )\r\n}\r\n\r\nfunction Alert(props) {\r\n    return <MuiAlert elevation={6} variant=\"filled\" {...props} />;\r\n  }\r\n\r\n\r\n\r\nfunction Switcher({ index }) {\r\n    const TabPanel = [Generator,List][index]\r\n    return <TabPanel />\r\n}\r\n\r\n\r\n\r\n\r\nfunction AppSnackbar(){\r\n\r\n    const severity = useEzState$(\"app.snackbar.severity\")\r\n    \r\n    const snackbarState = lh.useLocalState(s=>s.snackbar) //\r\n    const severity$ = lh$.useLocalState$(\"snackbar.severity\")\r\n\r\n    const closeSnackbar = useEzActions(a => a.app.snackbar.close)\r\n    \r\n    // const snackbarState = useStoreState(s => s.app.snackbar)\r\n    // const closeSnackbar = useStoreActions(s => s.app.snackbar.close)\r\n\r\n    return(\r\n    <Snackbar open={snackbarState.open} autoHideDuration={4500} onClose={()=>closeSnackbar()}>\r\n        <Alert onClose={()=>closeSnackbar()} severity={severity$}>\r\n          {snackbarState.message}\r\n        </Alert>\r\n      </Snackbar>)\r\n}","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import './index.css';\r\nimport { App } from 'modules/app/app.component';\r\nimport reportWebVitals from 'other/reportWebVitals';\r\n\r\nimport { StoreProvider } from 'easy-peasy';\r\nimport { store } from 'store/store';\r\nimport { CssBaseline, createMuiTheme, ThemeProvider } from '@material-ui/core';\r\n\r\nimport {Settings} from \"luxon\"\r\nSettings.defaultLocale = \"fr\";\r\n\r\nconst themeOptions = {}\r\nconst theme = createMuiTheme(themeOptions);\r\n\r\n\r\nReactDOM.render(\r\n  <ThemeProvider theme={theme}>\r\n    <CssBaseline />\r\n    <React.StrictMode>\r\n      <StoreProvider store={store}>\r\n        <App />\r\n      </StoreProvider>\r\n    </React.StrictMode>\r\n  </ThemeProvider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}